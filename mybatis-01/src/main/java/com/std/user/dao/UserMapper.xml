<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.std.user.dao.UserMapper">

	<insert id="saveUser" parameterType="com.std.user.domain.User"
		flushCache="true" useGeneratedKeys="true" keyColumn="user_id"
		keyProperty="userId">
		INSERT INTO
		std_user(user_login_name,user_password,user_name,user_age,user_email,user_phone)
		VALUES (
		#{userLoginName},#{userPassword},#{userName},#{userAge},#{userEmail},#{userPhone}
		);
	</insert>

	<update id="updateUser" parameterType="com.std.user.domain.User"
		flushCache="true">
		UPDATE std_user
		<set>
			<if test="userName != null">
				user_name = #{userName},
			</if>
			<if test="userName != null">
				user_login_name = #{userLoginName},
			</if>
		</set>
		WHERE user_id = #{userId};
	</update>
	
	<delete id="deleteUser" flushCache="true" parameterType="Integer">
		delete from std_user where user_id=#{userId}  
	</delete>
	
	<select id="selectUser" resultType="com.std.user.domain.User"
		useCache="true" timeout="3000">
		select
		user_id as userId,
		user_login_name as
		userLoginName,
		user_password as userPassword,
		user_name as userName,
		user_age as userAge,
		user_email as userEmail,
		user_phone as userPhone
		from std_user where user_id = #{userId}
	</select>
	
	<select id="selectUsers"  parameterType="Integer" resultType="com.std.user.domain.User" 
		useCache="true" timeout="3000">
		select
		user_id as userId,
		user_login_name as
		userLoginName,
		user_password as userPassword,
		user_name as userName,
		user_age as userAge,
		user_email as userEmail,
		user_phone as userPhone
		from std_user where  <![CDATA[ user_id <  #{maxId} ]]>
	</select>
</mapper>